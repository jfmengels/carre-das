module Evergreen.Migrate.V7 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V6.Types
import Evergreen.V7.Types
import Lamdera.Migrations exposing (..)
import List
import Maybe


frontendModel : Evergreen.V6.Types.FrontendModel -> ModelMigration Evergreen.V7.Types.FrontendModel Evergreen.V7.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V6.Types.BackendModel -> ModelMigration Evergreen.V7.Types.BackendModel Evergreen.V7.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V6.Types.FrontendMsg -> MsgMigration Evergreen.V7.Types.FrontendMsg Evergreen.V7.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V6.Types.ToBackend -> MsgMigration Evergreen.V7.Types.ToBackend Evergreen.V7.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V6.Types.BackendMsg -> MsgMigration Evergreen.V7.Types.BackendMsg Evergreen.V7.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V6.Types.ToFrontend -> MsgMigration Evergreen.V7.Types.ToFrontend Evergreen.V7.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V6.Types.FrontendModel -> Evergreen.V7.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , state = old.state |> migrate_Types_State
    }


migrate_Types_AdminModel : Evergreen.V6.Types.AdminModel -> Evergreen.V7.Types.AdminModel
migrate_Types_AdminModel old =
    { rooms = old.rooms |> List.map migrate_Types_RoomForAdmin
    , now = old.now
    , requiresAdminPassword = old.requiresAdminPassword
    , passwordWasInvalid = old.passwordWasInvalid
    , adminPassword = old.adminPassword
    }


migrate_Types_AdminMsg : Evergreen.V6.Types.AdminMsg -> Evergreen.V7.Types.AdminMsg
migrate_Types_AdminMsg old =
    case old of
        Evergreen.V6.Types.GotRooms p0 p1 ->
            Evergreen.V7.Types.GotRooms (p0 |> List.map migrate_Types_RoomForAdmin) p1

        Evergreen.V6.Types.UserChangedPassword p0 ->
            Evergreen.V7.Types.UserChangedPassword p0

        Evergreen.V6.Types.UserSubmittedPassword ->
            Evergreen.V7.Types.UserSubmittedPassword

        Evergreen.V6.Types.DeleteRoomClicked p0 ->
            Evergreen.V7.Types.DeleteRoomClicked (p0 |> migrate_Types_RoomId)


migrate_Types_AudienceRoomModel : Evergreen.V6.Types.AudienceRoomModel -> Evergreen.V7.Types.AudienceRoomModel
migrate_Types_AudienceRoomModel old =
    { roomId = old.roomId |> migrate_Types_RoomId
    , constraintsDisplayed = old.constraintsDisplayed
    , constraints = old.constraints |> migrate_Types_RoomConstraints
    }


migrate_Types_Color : Evergreen.V6.Types.Color -> Evergreen.V7.Types.Color
migrate_Types_Color old =
    case old of
        Evergreen.V6.Types.Blue ->
            Evergreen.V7.Types.Blue

        Evergreen.V6.Types.Yellow ->
            Evergreen.V7.Types.Yellow

        Evergreen.V6.Types.Red ->
            Evergreen.V7.Types.Red

        Evergreen.V6.Types.Green ->
            Evergreen.V7.Types.Green


migrate_Types_FrontendMsg : Evergreen.V6.Types.FrontendMsg -> Evergreen.V7.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V6.Types.UrlClicked p0 ->
            Evergreen.V7.Types.UrlClicked p0

        Evergreen.V6.Types.UrlChanged p0 ->
            Evergreen.V7.Types.UrlChanged p0

        Evergreen.V6.Types.RoomSelectMsg p0 ->
            Evergreen.V7.Types.RoomSelectMsg (p0 |> migrate_Types_RoomSelectMsg)

        Evergreen.V6.Types.RoomMsg p0 ->
            Evergreen.V7.Types.RoomMsg (p0 |> migrate_Types_RoomMsg)

        Evergreen.V6.Types.RoomAsHostMsg p0 ->
            Evergreen.V7.Types.RoomAsHostMsg (p0 |> migrate_Types_RoomAsHostMsg)

        Evergreen.V6.Types.AdminMsg p0 ->
            Evergreen.V7.Types.AdminMsg (p0 |> migrate_Types_AdminMsg)

        Evergreen.V6.Types.NoOpFrontendMsg ->
            Evergreen.V7.Types.NoOpFrontendMsg


migrate_Types_Mode : Evergreen.V6.Types.Mode -> Evergreen.V7.Types.Mode
migrate_Types_Mode old =
    case old of
        Evergreen.V6.Types.Editing ->
            Evergreen.V7.Types.Editing

        Evergreen.V6.Types.ShowingAll ->
            Evergreen.V7.Types.ShowingAll

        Evergreen.V6.Types.Showing p0 ->
            Evergreen.V7.Types.Showing (p0 |> Maybe.map migrate_Types_Color)


migrate_Types_RoomAsHostModel : Evergreen.V6.Types.RoomAsHostModel -> Evergreen.V7.Types.RoomAsHostModel
migrate_Types_RoomAsHostModel old =
    { roomId = old.roomId |> migrate_Types_RoomId
    , mode = old.mode |> migrate_Types_Mode
    , constraintsDisplayed = old.constraintsDisplayed
    , constraints = old.constraints |> migrate_Types_RoomConstraints
    }


migrate_Types_RoomAsHostMsg : Evergreen.V6.Types.RoomAsHostMsg -> Evergreen.V7.Types.RoomAsHostMsg
migrate_Types_RoomAsHostMsg old =
    case old of
        Evergreen.V6.Types.ShowAll ->
            Evergreen.V7.Types.ShowAll

        Evergreen.V6.Types.Edit ->
            Evergreen.V7.Types.Edit

        Evergreen.V6.Types.ChangedInput p0 p1 ->
            Evergreen.V7.Types.ChangedInput (p0 |> migrate_Types_Color) p1

        Evergreen.V6.Types.Show p0 ->
            Evergreen.V7.Types.Show (p0 |> Maybe.map migrate_Types_Color)

        Evergreen.V6.Types.Unveil ->
            Evergreen.V7.Types.Unveil

        Evergreen.V6.Types.Veil ->
            Evergreen.V7.Types.Veil


migrate_Types_RoomConstraints : Evergreen.V6.Types.RoomConstraints -> Evergreen.V7.Types.RoomConstraints
migrate_Types_RoomConstraints old =
    old


migrate_Types_RoomForAdmin : Evergreen.V6.Types.RoomForAdmin -> Evergreen.V7.Types.RoomForAdmin
migrate_Types_RoomForAdmin old =
    { id = old.id |> migrate_Types_RoomId
    , lastChangeDate = old.lastChangeDate
    }


migrate_Types_RoomId : Evergreen.V6.Types.RoomId -> Evergreen.V7.Types.RoomId
migrate_Types_RoomId old =
    case old of
        Evergreen.V6.Types.RoomId p0 ->
            Evergreen.V7.Types.RoomId p0


migrate_Types_RoomModel : Evergreen.V6.Types.RoomModel -> Evergreen.V7.Types.RoomModel
migrate_Types_RoomModel old =
    { roomId = old.roomId |> migrate_Types_RoomId
    , constraintsDisplayed = old.constraintsDisplayed
    , color = old.color |> Maybe.map migrate_Types_Color
    , constraints = old.constraints |> migrate_Types_RoomConstraints
    }


migrate_Types_RoomMsg : Evergreen.V6.Types.RoomMsg -> Evergreen.V7.Types.RoomMsg
migrate_Types_RoomMsg old =
    case old of
        Evergreen.V6.Types.ChangeColor p0 ->
            Evergreen.V7.Types.ChangeColor (p0 |> Maybe.map migrate_Types_Color)


migrate_Types_RoomSelectModel : Evergreen.V6.Types.RoomSelectModel -> Evergreen.V7.Types.RoomSelectModel
migrate_Types_RoomSelectModel old =
    old


migrate_Types_RoomSelectMsg : Evergreen.V6.Types.RoomSelectMsg -> Evergreen.V7.Types.RoomSelectMsg
migrate_Types_RoomSelectMsg old =
    case old of
        Evergreen.V6.Types.ChangedRoomSelectInput p0 ->
            Evergreen.V7.Types.ChangedRoomSelectInput p0

        Evergreen.V6.Types.Submit ->
            Evergreen.V7.Types.Submit


migrate_Types_State : Evergreen.V6.Types.State -> Evergreen.V7.Types.State
migrate_Types_State old =
    case old of
        Evergreen.V6.Types.RoomSelect p0 ->
            Evergreen.V7.Types.RoomSelect (p0 |> migrate_Types_RoomSelectModel)

        Evergreen.V6.Types.InRoom p0 ->
            Evergreen.V7.Types.InRoom (p0 |> migrate_Types_RoomModel)

        Evergreen.V6.Types.InRoomAsHost p0 ->
            Evergreen.V7.Types.InRoomAsHost (p0 |> migrate_Types_RoomAsHostModel)

        Evergreen.V6.Types.InAudienceRoom p0 ->
            Evergreen.V7.Types.InAudienceRoom (p0 |> migrate_Types_AudienceRoomModel)

        Evergreen.V6.Types.Admin p0 ->
            Evergreen.V7.Types.Admin (p0 |> migrate_Types_AdminModel)

        Evergreen.V6.Types.RouteError ->
            Evergreen.V7.Types.RouteError
