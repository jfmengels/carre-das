module Evergreen.Migrate.V5 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V3.Types
import Evergreen.V5.Types
import Lamdera.Migrations exposing (..)
import SeqDict
import Time


frontendModel : Evergreen.V3.Types.FrontendModel -> ModelMigration Evergreen.V5.Types.FrontendModel Evergreen.V5.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V3.Types.BackendModel -> ModelMigration Evergreen.V5.Types.BackendModel Evergreen.V5.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V3.Types.FrontendMsg -> MsgMigration Evergreen.V5.Types.FrontendMsg Evergreen.V5.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V3.Types.ToBackend -> MsgMigration Evergreen.V5.Types.ToBackend Evergreen.V5.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V3.Types.BackendMsg -> MsgMigration Evergreen.V5.Types.BackendMsg Evergreen.V5.Types.BackendMsg
backendMsg old =
    MsgMigrated ( migrate_Types_BackendMsg old, Cmd.none )


toFrontend : Evergreen.V3.Types.ToFrontend -> MsgMigration Evergreen.V5.Types.ToFrontend Evergreen.V5.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V3.Types.BackendModel -> Evergreen.V5.Types.BackendModel
migrate_Types_BackendModel old =
    { rooms = old.rooms |> SeqDict.toList |> List.map (Tuple.mapBoth migrate_Types_RoomId migrate_Types_Room) |> SeqDict.fromList
    }


migrate_Types_FrontendModel : Evergreen.V3.Types.FrontendModel -> Evergreen.V5.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , state = old.state |> migrate_Types_State
    }


migrate_Types_BackendMsg : Evergreen.V3.Types.BackendMsg -> Evergreen.V5.Types.BackendMsg
migrate_Types_BackendMsg old =
    case old of
        Evergreen.V3.Types.NoOpBackendMsg ->
            Evergreen.V5.Types.NoOpBackendMsg

        Evergreen.V3.Types.OnDisconnect p0 ->
            Evergreen.V5.Types.OnDisconnect p0


migrate_Types_Color : Evergreen.V3.Types.Color -> Evergreen.V5.Types.Color
migrate_Types_Color old =
    case old of
        Evergreen.V3.Types.Blue ->
            Evergreen.V5.Types.Blue

        Evergreen.V3.Types.Yellow ->
            Evergreen.V5.Types.Yellow

        Evergreen.V3.Types.Red ->
            Evergreen.V5.Types.Red

        Evergreen.V3.Types.Green ->
            Evergreen.V5.Types.Green


migrate_Types_FrontendMsg : Evergreen.V3.Types.FrontendMsg -> Evergreen.V5.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V3.Types.UrlClicked p0 ->
            Evergreen.V5.Types.UrlClicked p0

        Evergreen.V3.Types.UrlChanged p0 ->
            Evergreen.V5.Types.UrlChanged p0

        Evergreen.V3.Types.RoomSelectMsg p0 ->
            Evergreen.V5.Types.RoomSelectMsg (p0 |> migrate_Types_RoomSelectMsg)

        Evergreen.V3.Types.RoomMsg p0 ->
            Evergreen.V5.Types.RoomMsg (p0 |> migrate_Types_RoomMsg)

        Evergreen.V3.Types.NoOpFrontendMsg ->
            Evergreen.V5.Types.NoOpFrontendMsg


migrate_Types_Mode : Evergreen.V3.Types.Mode -> Evergreen.V5.Types.Mode
migrate_Types_Mode old =
    case old of
        Evergreen.V3.Types.Editing ->
            Evergreen.V5.Types.Editing

        Evergreen.V3.Types.ShowingAll ->
            Evergreen.V5.Types.ShowingAll

        Evergreen.V3.Types.Showing p0 ->
            Evergreen.V5.Types.Showing (p0 |> Maybe.map migrate_Types_Color)


migrate_Types_Role : Evergreen.V3.Types.Role -> Evergreen.V5.Types.Role
migrate_Types_Role old =
    case old of
        Evergreen.V3.Types.UndecidedUserType ->
            Evergreen.V5.Types.UndecidedUserType

        Evergreen.V3.Types.Host ->
            Evergreen.V5.Types.Host

        Evergreen.V3.Types.Player p0 ->
            Evergreen.V5.Types.Player (p0 |> migrate_Types_Color)


migrate_Types_Room : Evergreen.V3.Types.Room -> Evergreen.V5.Types.Room
migrate_Types_Room old =
    { constraints = old.constraints |> migrate_Types_RoomConstraints
    , connectedPlayers = old.connectedPlayers
    , constraintsDisplayed = old.constraintsDisplayed
    , lastChangeDate = Time.millisToPosix 0
    }


migrate_Types_RoomConstraints : Evergreen.V3.Types.RoomConstraints -> Evergreen.V5.Types.RoomConstraints
migrate_Types_RoomConstraints old =
    old


migrate_Types_RoomId : Evergreen.V3.Types.RoomId -> Evergreen.V5.Types.RoomId
migrate_Types_RoomId old =
    case old of
        Evergreen.V3.Types.RoomId p0 ->
            Evergreen.V5.Types.RoomId p0


migrate_Types_RoomModel : Evergreen.V3.Types.RoomModel -> Evergreen.V5.Types.RoomModel
migrate_Types_RoomModel old =
    { roomId = old.roomId |> migrate_Types_RoomId
    , mode = old.mode |> migrate_Types_Mode
    , constraintsDisplayed = old.constraintsDisplayed
    , role = old.role |> migrate_Types_Role
    , blue = old.blue
    , yellow = old.yellow
    , red = old.red
    , green = old.green
    }


migrate_Types_RoomMsg : Evergreen.V3.Types.RoomMsg -> Evergreen.V5.Types.RoomMsg
migrate_Types_RoomMsg old =
    case old of
        Evergreen.V3.Types.ShowAll ->
            Evergreen.V5.Types.ShowAll

        Evergreen.V3.Types.Edit ->
            Evergreen.V5.Types.Edit

        Evergreen.V3.Types.ChangedInput p0 p1 ->
            Evergreen.V5.Types.ChangedInput (p0 |> migrate_Types_Color) p1

        Evergreen.V3.Types.Show p0 ->
            Evergreen.V5.Types.Show (p0 |> Maybe.map migrate_Types_Color)

        Evergreen.V3.Types.ChangeRole p0 ->
            Evergreen.V5.Types.ChangeRole (p0 |> migrate_Types_Role)

        Evergreen.V3.Types.Unveil ->
            Evergreen.V5.Types.Unveil

        Evergreen.V3.Types.Veil ->
            Evergreen.V5.Types.Veil


migrate_Types_RoomSelectModel : Evergreen.V3.Types.RoomSelectModel -> Evergreen.V5.Types.RoomSelectModel
migrate_Types_RoomSelectModel old =
    old


migrate_Types_RoomSelectMsg : Evergreen.V3.Types.RoomSelectMsg -> Evergreen.V5.Types.RoomSelectMsg
migrate_Types_RoomSelectMsg old =
    case old of
        Evergreen.V3.Types.ChangedRoomSelectInput p0 ->
            Evergreen.V5.Types.ChangedRoomSelectInput p0

        Evergreen.V3.Types.Submit ->
            Evergreen.V5.Types.Submit


migrate_Types_State : Evergreen.V3.Types.State -> Evergreen.V5.Types.State
migrate_Types_State old =
    case old of
        Evergreen.V3.Types.RoomSelect p0 ->
            Evergreen.V5.Types.RoomSelect (p0 |> migrate_Types_RoomSelectModel)

        Evergreen.V3.Types.InRoom p0 ->
            Evergreen.V5.Types.InRoom (p0 |> migrate_Types_RoomModel)


migrate_Types_ToBackend : Evergreen.V3.Types.ToBackend -> Evergreen.V5.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V3.Types.NoOpToBackend ->
            Evergreen.V5.Types.NoOpToBackend

        Evergreen.V3.Types.RegisterToRoom p0 ->
            Evergreen.V5.Types.RegisterToRoom (p0 |> migrate_Types_RoomId)

        Evergreen.V3.Types.UnveilConstraints p0 p1 ->
            Evergreen.V5.Types.UnveilConstraints (p0 |> migrate_Types_RoomId)
                (p1 |> migrate_Types_RoomConstraints)

        Evergreen.V3.Types.HideConstraints p0 ->
            Evergreen.V5.Types.HideConstraints (p0 |> migrate_Types_RoomId)


migrate_Types_ToFrontend : Evergreen.V3.Types.ToFrontend -> Evergreen.V5.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V3.Types.NoOpToFrontend ->
            Evergreen.V5.Types.NoOpToFrontend

        Evergreen.V3.Types.SendConstraintsToFrontend p0 p1 ->
            Evergreen.V5.Types.SendConstraintsToFrontend (p0 |> migrate_Types_RoomConstraints) p1

        Evergreen.V3.Types.HideConstraintsForClient ->
            Evergreen.V5.Types.HideConstraintsForClient
