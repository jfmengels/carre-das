module Evergreen.Migrate.V6 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V5.Types
import Evergreen.V6.Types
import Lamdera.Migrations exposing (..)
import List
import SeqDict
import Time


frontendModel : Evergreen.V5.Types.FrontendModel -> ModelMigration Evergreen.V6.Types.FrontendModel Evergreen.V6.Types.FrontendMsg
frontendModel old =
    modelMigrated (migrate_Types_FrontendModel old)


backendModel : Evergreen.V5.Types.BackendModel -> ModelMigration Evergreen.V6.Types.BackendModel Evergreen.V6.Types.BackendMsg
backendModel old =
    modelMigrated (migrate_Types_BackendModel old)


frontendMsg : Evergreen.V5.Types.FrontendMsg -> MsgMigration Evergreen.V6.Types.FrontendMsg Evergreen.V6.Types.FrontendMsg
frontendMsg old =
    migrate_Types_FrontendMsg old


toBackend : Evergreen.V5.Types.ToBackend -> MsgMigration Evergreen.V6.Types.ToBackend Evergreen.V6.Types.BackendMsg
toBackend old =
    MsgOldValueIgnored


backendMsg : Evergreen.V5.Types.BackendMsg -> MsgMigration Evergreen.V6.Types.BackendMsg Evergreen.V6.Types.BackendMsg
backendMsg old =
    msgMigrated (migrate_Types_BackendMsg old)


toFrontend : Evergreen.V5.Types.ToFrontend -> MsgMigration Evergreen.V6.Types.ToFrontend Evergreen.V6.Types.FrontendMsg
toFrontend old =
    MsgOldValueIgnored


msgMigrated : a -> MsgMigration a msg
msgMigrated x =
    MsgMigrated ( x, Cmd.none )


modelMigrated : a -> ModelMigration a msg
modelMigrated x =
    ModelMigrated ( x, Cmd.none )


migrate_Types_BackendModel : Evergreen.V5.Types.BackendModel -> Evergreen.V6.Types.BackendModel
migrate_Types_BackendModel old =
    { rooms = old.rooms |> SeqDict.toList |> List.map (Tuple.mapBoth migrate_Types_RoomId migrate_Types_Room) |> SeqDict.fromList
    , authenticatedAdmins = (SeqDict.empty {- Type `SeqDict (lamdera/core:Lamdera.SessionId) (elm/time:Time.Posix)` was added in V6. I need you to set a default value. -})
    }


migrate_Types_FrontendModel : Evergreen.V5.Types.FrontendModel -> Evergreen.V6.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , state = old.state |> migrate_Types_State
    }


migrate_Types_AdminModel : Evergreen.V5.Types.AdminModel -> Evergreen.V6.Types.AdminModel
migrate_Types_AdminModel old =
    { rooms = old.rooms |> List.map migrate_Types_RoomForAdmin
    , now = old.now
    , requiresAdminPassword = (True {- Type `Bool` was added in V6. I need you to set a default value. -})
    , passwordWasInvalid = (False {- Type `Bool` was added in V6. I need you to set a default value. -})
    , adminPassword = ("" {- Type `String` was added in V6. I need you to set a default value. -})
    }


migrate_Types_AdminMsg : Evergreen.V5.Types.AdminMsg -> Evergreen.V6.Types.AdminMsg
migrate_Types_AdminMsg old =
    case old of
        Evergreen.V5.Types.GotTime p0 ->
            (Evergreen.V6.Types.UserChangedPassword ""
             {- `GotTime` was removed or renamed in V6 so I couldn't figure out how to migrate it.
                I need you to decide what happens to this Evergreen.V5.Types.GotTime value in a migration.
                See https://dashboard.lamdera.app/tips/modified-custom-type for more info.
             -}
            )

        Evergreen.V5.Types.DeleteRoomClicked p0 ->
            Evergreen.V6.Types.DeleteRoomClicked (p0 |> migrate_Types_RoomId)


migrate_Types_BackendMsg : Evergreen.V5.Types.BackendMsg -> Evergreen.V6.Types.BackendMsg
migrate_Types_BackendMsg old =
    case old of
        Evergreen.V5.Types.NoOpBackendMsg ->
            Evergreen.V6.Types.NoOpBackendMsg

        Evergreen.V5.Types.OnDisconnect p0 ->
            Evergreen.V6.Types.OnDisconnect p0

        Evergreen.V5.Types.BackendGotTime p0 p1 p2 ->
            Evergreen.V6.Types.NoOpBackendMsg


migrate_Types_FrontendMsg : Evergreen.V5.Types.FrontendMsg -> MsgMigration Evergreen.V6.Types.FrontendMsg msg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V5.Types.UrlClicked p0 ->
            msgMigrated (Evergreen.V6.Types.UrlClicked p0)

        Evergreen.V5.Types.UrlChanged p0 ->
            msgMigrated (Evergreen.V6.Types.UrlChanged p0)

        Evergreen.V5.Types.RoomSelectMsg p0 ->
            msgMigrated (Evergreen.V6.Types.RoomSelectMsg (p0 |> migrate_Types_RoomSelectMsg))

        Evergreen.V5.Types.RoomMsg p0 ->
            MsgOldValueIgnored

        Evergreen.V5.Types.AdminMsg p0 ->
            msgMigrated (Evergreen.V6.Types.AdminMsg (p0 |> migrate_Types_AdminMsg))

        Evergreen.V5.Types.NoOpFrontendMsg ->
            msgMigrated Evergreen.V6.Types.NoOpFrontendMsg


migrate_Types_Room : Evergreen.V5.Types.Room -> Evergreen.V6.Types.Room
migrate_Types_Room old =
    { constraints = old.constraints |> migrate_Types_RoomConstraints
    , connectedPlayers = old.connectedPlayers
    , constraintsDisplayed = old.constraintsDisplayed
    , lastChangeDate = old.lastChangeDate
    }


migrate_Types_RoomConstraints : Evergreen.V5.Types.RoomConstraints -> Evergreen.V6.Types.RoomConstraints
migrate_Types_RoomConstraints old =
    old


migrate_Types_RoomForAdmin : Evergreen.V5.Types.RoomForAdmin -> Evergreen.V6.Types.RoomForAdmin
migrate_Types_RoomForAdmin old =
    { id = old.id |> migrate_Types_RoomId
    , lastChangeDate = old.lastChangeDate
    }


migrate_Types_RoomId : Evergreen.V5.Types.RoomId -> Evergreen.V6.Types.RoomId
migrate_Types_RoomId old =
    case old of
        Evergreen.V5.Types.RoomId p0 ->
            Evergreen.V6.Types.RoomId p0


migrate_Types_RoomModel : Evergreen.V5.Types.RoomModel -> Evergreen.V6.Types.RoomModel
migrate_Types_RoomModel old =
    { roomId = old.roomId |> migrate_Types_RoomId
    , constraintsDisplayed = old.constraintsDisplayed
    , color = (Nothing {- Type `Maybe (Evergreen.V6.Types.Color)` was added in V6. I need you to set a default value. -})
    , constraints = ({ blue = old.blue, yellow = old.yellow, red = old.red, green = old.green } {- Type `Evergreen.V6.Types.RoomConstraints` was added in V6. I need you to set a default value. -})
    }


migrate_Types_RoomSelectModel : Evergreen.V5.Types.RoomSelectModel -> Evergreen.V6.Types.RoomSelectModel
migrate_Types_RoomSelectModel old =
    old


migrate_Types_RoomSelectMsg : Evergreen.V5.Types.RoomSelectMsg -> Evergreen.V6.Types.RoomSelectMsg
migrate_Types_RoomSelectMsg old =
    case old of
        Evergreen.V5.Types.ChangedRoomSelectInput p0 ->
            Evergreen.V6.Types.ChangedRoomSelectInput p0

        Evergreen.V5.Types.Submit ->
            Evergreen.V6.Types.Submit


migrate_Types_State : Evergreen.V5.Types.State -> Evergreen.V6.Types.State
migrate_Types_State old =
    case old of
        Evergreen.V5.Types.RoomSelect p0 ->
            Evergreen.V6.Types.RoomSelect (p0 |> migrate_Types_RoomSelectModel)

        Evergreen.V5.Types.InRoom p0 ->
            Evergreen.V6.Types.InRoom (p0 |> migrate_Types_RoomModel)

        Evergreen.V5.Types.Admin p0 ->
            Evergreen.V6.Types.Admin (p0 |> migrate_Types_AdminModel)
